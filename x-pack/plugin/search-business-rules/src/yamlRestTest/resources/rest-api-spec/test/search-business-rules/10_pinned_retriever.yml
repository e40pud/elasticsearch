setup:
  - do:
      indices.create:
        index: test-index1
        body:
          settings:
            number_of_shards: 1
            number_of_replicas: 0

  - do:
      bulk:
        refresh: true
        index: test-index1
        body:
          - index:
              _id: doc1
          - { "text": "document one" }
          - index:
              _id: doc2
          - { "text": "document two" }
          - index:
              _id: doc3
          - { "text": "document three" }
          - index:
              _id: doc4
          - { "text": "document four" }
          - index:
              _id: doc5
          - { "text": "document five" }

---
"pinned retriever parameter variations":
  - do:
      search:
        index: test-index1
        body:
          retriever:
            pinned:
              docs:
                - _index: test-index1
                  _id: doc1
                - _index: test-index1
                  _id: doc2
              retriever:
                standard:
                  query:
                    match_all: {}

  - match: { hits.total.value: 5 }
  - match: { hits.hits.0._id: doc1 }
  - match: { hits.hits.1._id: doc2 }
  - match: { hits.hits.2._id: doc3 }

  - do:
      search:
        index: test-index1
        body:
          retriever:
            pinned:
              ids: ["doc1"]
              retriever:
                standard:
                  query:
                    match_all: {}

  - match: { hits.total.value: 5 }
  - match: { hits.hits.0._id: doc1 }
  - match: { hits.hits.1._id: doc2 }

  - do:
      search:
        index: test-index1
        body:
          retriever:
            pinned:
              docs:
                - _index: test-index1
                  _id: doc1
              retriever:
                standard:
                  query:
                    match_all: {}

  - match: { hits.total.value: 5 }
  - match: { hits.hits.0._id: doc1 }
  - match: { hits.hits.1._id: doc2 }

---
"pinned retriever dynamic pinning and ordering":
  - skip:
      features: headers
  - do:
      headers:
        Content-Type: application/json
      search:
        index: test-index1
        body:
          retriever:
            pinned:
              ids: ["doc1", "doc2"]
              retriever:
                standard:
                  query:
                    match_all: {}
        explain: true

  - match: { hits.total.value: 5 }
  - match: { hits.hits.0._id: doc1 }
  - match: { hits.hits.1._id: doc2 }
  - match: { hits.hits.2._id: doc3 }
  - match: { hits.hits.0._score: 1.7014124E38 }
  - match: { hits.hits.1._score: 1.7014122E38 }
  - match: { hits.hits.2._score: 1.0 }

  - do:
      headers:
        Content-Type: application/json
      search:
        index: test-index1
        body:
          retriever:
            pinned:
              ids: ["doc1", "doc3"]
              retriever:
                standard:
                  query:
                    match_all: {}
        explain: true

  - match: { hits.total.value: 5 }
  - match: { hits.hits.0._id: doc1 }
  - match: { hits.hits.1._id: doc3 }
  - match: { hits.hits.2._id: doc2 }
  - match: { hits.hits.3._id: doc4 }
  - match: { hits.hits.4._id: doc5 }
  - match: { hits.hits.0._score: 1.7014124E38 }
  - match: { hits.hits.1._score: 1.7014122E38 }
  - match: { hits.hits.2._score: 1.0 }

---
"pinned retriever combined with rrf":
  - skip:
      features: headers

  - do:
      headers:
        Content-Type: application/json
      search:
        index: test-index1
        body:
          retriever:
            pinned:
              ids: ["doc1"]
              retriever:
                rrf:
                  retrievers: [
                    {
                      standard: {
                        query: {
                          term: { text: "document" }
                        }
                      }
                    },
                    {
                      standard: {
                        query: {
                          term: { text: "three" }
                        }
                      }
                    }
                  ]
              rank_window_size: 10

  - match: { hits.total.value: 5 }
  - match: { hits.hits.0._id: doc1 }
  - match: { hits.hits.0._score: 1.7014122E38 }
  - match: { hits.hits.1._id: doc3 }
  - match: { hits.hits.2._id: doc2 }
  - match: { hits.hits.1._score < hits.hits.0._score }

---
"pinned retriever with pagination":
  - do:
      search:
        index: test-index1
        body:
          size: 1
          from: 1
          retriever:
            pinned:
              ids: ["doc1", "doc2"]
              retriever:
                standard:
                  query:
                    match_all: {}

  - match: { hits.total.value: 5 }
  - length: { hits.hits: 1 }
  - match: { hits.hits.0._id: doc2 }

---
"pinned retriever as a sub-retriever":
  - do:
      search:
        index: test-index1
        body:
          retriever:
            rrf:
              retrievers:
                -
                  standard:
                    query:
                      match_all: {}
                -
                  pinned:
                    ids: ["doc1", "doc2"]
                    retriever:
                      standard:
                        query:
                          match_all: {}

  - match: { hits.total.value: 5 }
  - match: { hits.hits.0._id: doc1 }
  - match: { hits.hits.1._id: doc2 }
  - match: { hits.hits.2._id: doc3 }

---
"pinned retriever with explicit sort on score":
  - do:
      search:
        index: test-index1
        body:
          retriever:
            pinned:
              ids: ["doc1", "doc2"]
              retriever:
                standard:
                  query:
                    match_all: {}
                  sort: [ "_score" ]

  - match: { hits.total.value: 5 }
  - match: { hits.hits.0._id: doc1 }
  - match: { hits.hits.1._id: doc2 }
  - match: { hits.hits.2._id: doc3 }

---
"pinned retriever with rank window size":
  - skip:
      features: headers

  - do:
      headers:
        Content-Type: application/json
      search:
        index: test-index1
        body:
          retriever:
            pinned:
              ids: ["doc1", "doc2"]
              retriever:
                standard:
                  query:
                    match_all: {}
              rank_window_size: 1

  - match: { hits.total.value: 5 }
  - length: { hits.hits: 1 }
  - match: { hits.hits.0._id: doc1 }

  - do:
      headers:
        Content-Type: application/json
      search:
        index: test-index1
        body:
          retriever:
            pinned:
              ids: ["doc1", "doc2"]
              retriever:
                standard:
                  query:
                    match_all: {}
              rank_window_size: 10

  - match: { hits.total.value: 5 }
  - length: { hits.hits: 5 }
  - match: { hits.hits.0._id: doc1 }
  - match: { hits.hits.1._id: doc2 }
  - match: { hits.hits.2._id: doc3 }

---
"pinned retriever explanation":
  - skip:
      features: headers

  - do:
      headers:
        Content-Type: application/json
      search:
        index: test-index1
        body:
          retriever:
            pinned:
              ids: ["doc1", "doc2"]
              retriever:
                standard:
                  query:
                    match_all: {}
          explain: true

  - match: { hits.hits.0._id: doc1 }
  - match: { hits.hits.0._explanation.value: 1.0 }
  - match: { hits.hits.0._explanation.description: "doc [0] with an original score of [1.7014124E38] is at rank [1] from the following source queries." }

  - match: { hits.hits.1._id: doc2 }
  - match: { hits.hits.1._explanation.value: 2.0 }
  - match: { hits.hits.1._explanation.description: "doc [1] with an original score of [1.7014122E38] is at rank [2] from the following source queries." }

---
"pinned retriever with empty parameters":
  - do:
      catch: /Either 'ids' or 'docs' must be provided and non-empty for pinned retriever/
      search:
        index: test-index1
        body:
          retriever:
            pinned:
              retriever:
                standard:
                  query:
                    match_all: {}

---
"pinned retriever error case - both ids and docs":
  - do:
      catch: /Both 'ids' and 'docs' cannot be specified at the same time/
      search:
        index: test-index1
        body:
          retriever:
            pinned:
              ids: ["doc1"]
              docs:
                - _index: test-index1
                  _id: doc2
              retriever:
                standard:
                  query:
                    match_all: {}

---
"pinned retriever error case - duplicate id":
  - do:
      catch: /duplicate id found/
      search:
        index: test-index1
        body:
          retriever:
            pinned:
              ids: ["doc1", "doc1"]
              retriever:
                standard:
                  query:
                    match_all: {}

---
"pinned retriever with ids and empty docs array":
  - do:
      search:
        index: test-index1
        body:
          retriever:
            pinned:
              ids: ["doc1"]
              docs: []
              retriever:
                standard:
                  query:
                    match_all: {}
  - match: { hits.total.value: 5 }
  - match: { hits.hits.0._id: doc1 }
  - match: { hits.hits.1._id: doc2 }
  - match: { hits.hits.2._id: doc3 }

---
"pinned retriever errors if sorting by anything other than score":
  - do:
      catch: /Pinned retriever only supports sorting by score. Custom sorting is not allowed./
      search:
        index: test-index1
        body:
          retriever:
            pinned:
              ids: ["doc1"]
              retriever:
                standard:
                  query:
                    match_all: {}
                  sort: [ { "_id": "desc" } ]
